{"version":3,"sources":["Mapping.js","Markers.js","Bar.js","App.js","index.js"],"names":["tagIconMapper","tag","style","color","tagColorMapper","margin","blue","amber","brown","indigo","purple","teal","green","red","grey","cyan","pink","Markers","props","getIconForType","bind","type","L","divIcon","className","html","ReactDOMServer","renderToString","Fragment","this","osmData","map","entry","idx","Marker","key","position","lat","lon","icon","Popup","name","Circle","center","searchCenter","lng","fillColor","radius","mapCenter","React","Component","Bar","loading","Paper","padding","Grid","container","spacing","item","xs","Typography","align","Object","getOwnPropertyNames","length","keys","Tooltip","title","aria-label","Badge","badgeContent","osmError","message","App","leafletMap","setLeafletMapRef","leafletElement","state","defaultZoom","defaultCenter","osmRequest","defaultRange","osmDataCounted","loadOSMData","getTypeByTags","handleRangeChange","handleMoveEnd","setState","queryOverpass","require","requestBody","replaceAll","getCenter","console","log","then","response","parsedEntries","entryMapCount","filter","tags","push","hasOwnProperty","catch","error","shop","amenity","sport","leisure","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","fetch","res","text","event","value","e","target","marks","label","Map","ref","fullscreenControl","zoom","onMoveEnd","LayersControl","BaseLayer","checked","TileLayer","url","attribution","subdomains","ext","Fab","size","onClick","setView","trigger","modal","nested","close","id","gutterBottom","Slider","onChange","aria-labelledby","step","defaultValue","min","max","getAriaValueText","valuetext","valueLabelDisplay","Button","variant","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"s3BA8BMA,GAAgB,SAAUC,GAC5B,OAAQA,GACJ,IAAK,WACD,OAAO,kBAAC,IAAD,CAASC,MAAO,CACnBC,MAAOC,GAAeH,MAE9B,IAAK,SACD,OAAO,kBAAC,KAAD,CAAUC,MAAO,CACpBC,MAAOC,GAAeH,MAE9B,IAAK,SACD,OAAO,kBAAC,IAAD,CAAUC,MAAO,CACpBC,MAAOC,GAAeH,GACtBI,OAAQ,SAEhB,IAAK,UACD,OAAO,kBAAC,IAAD,CAAeH,MAAO,CACzBC,MAAOC,GAAeH,GACtBI,OAAQ,SAEhB,IAAK,eACD,OAAO,kBAAC,IAAD,CAAeH,MAAO,CACzBC,MAAOC,GAAeH,GACtBI,OAAQ,SAEhB,IAAK,SACD,OAAO,kBAAC,IAAD,CAAYH,MAAO,CACtBC,MAAOC,GAAeH,GACtBI,OAAQ,SAEhB,IAAK,cACD,OAAO,kBAAC,IAAD,CAAuBH,MAAO,CACjCC,MAAOC,GAAeH,GACtBI,OAAQ,SAEhB,IAAK,WACD,OAAO,kBAAC,IAAD,CAAUH,MAAO,CACpBC,MAAOC,GAAeH,GACtBI,OAAQ,SAEhB,IAAK,SACD,OAAO,kBAAC,IAAD,CAAiBH,MAAO,CAC3BC,MAAOC,GAAeH,GACtBI,OAAQ,SAEhB,IAAK,aACD,OAAO,kBAAC,IAAD,CAAcH,MAAO,CACxBC,MAAOC,GAAeH,GACtBI,OAAQ,SAEhB,IAAK,OACD,OAAO,kBAAC,IAAD,CAAkBH,MAAO,CAC5BC,MAAOC,GAAeH,GACtBI,OAAQ,SAEhB,IAAK,WACD,OAAO,kBAAC,IAAD,CAAmBH,MAAO,CAC7BC,MAAOC,GAAeH,GACtBI,OAAQ,SAEhB,IAAK,UACD,OAAO,kBAAC,IAAD,CAAqBH,MAAO,CAC/BC,MAAOC,GAAeH,GACtBI,OAAQ,SAEhB,IAAK,UACD,OAAO,kBAAC,IAAD,CAAcH,MAAO,CACxBC,MAAOC,GAAeH,GACtBI,OAAQ,SAEhB,QACI,OAAO,kBAAC,IAAD,CAAiBH,MAAO,CAC3BC,MAAOC,GAAeH,GACtBI,OAAQ,WAKlBD,GAAiB,SAAUH,GAC7B,OAAQA,GACJ,IAAK,WAEL,IAAK,SACD,OAAOK,KAAK,KAChB,IAAK,SACD,OAAOC,IAAM,KACjB,IAAK,cACD,OAAOC,KAAM,KACjB,IAAK,WACD,OAAOC,IAAO,KAClB,IAAK,SACD,OAAOC,KAAO,KAClB,IAAK,aACD,OAAOC,KAAK,KAChB,IAAK,OACD,OAAOC,IAAM,KACjB,IAAK,WACD,OAAOC,KAAI,KACf,IAAK,UACD,OAAOC,KAAK,KAChB,IAAK,SACD,OAAOC,KAAK,KAChB,IAAK,eACD,OAAOC,KAAK,KAChB,QACI,OAAOF,KAAK,OC7FTG,G,kDAlCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,eAAiB,EAAKA,eAAeC,KAApB,gBAFP,E,kDAKnB,SAAeC,GACX,OAAOC,IAAEC,QAAQ,CACbC,UAAW,cACXC,KAAMC,IAAeC,eAAe3B,GAAcqB,Q,oBAI1D,WAAU,IAAD,OACL,OACI,kBAAC,IAAMO,SAAP,KACKC,KAAKX,MAAMY,QACPC,KAAI,SAACC,EAAOC,GAAR,OACD,kBAACC,EAAA,EAAD,CAAQC,IAAG,iBAAYF,GAAOG,SAAU,CAACJ,EAAMK,IAAKL,EAAMM,KAAMC,KAAM,EAAKpB,eAAea,EAAMX,OAC5F,kBAACmB,EAAA,EAAD,KACI,8BAAOR,EAAMX,MADjB,IAEI,8BAAOW,EAAMS,WAI7B,kBAACC,EAAA,EAAD,CACIC,OAAQ,CAAEN,IAAKR,KAAKX,MAAM0B,aAAa,GAAIC,IAAKhB,KAAKX,MAAM0B,aAAa,IACxEE,UAAU,OACVC,OAAQlB,KAAKX,MAAM6B,SACvB,kBAACb,EAAA,EAAD,CAAQC,IAAG,sBAAyBC,SAAU,CAACP,KAAKX,MAAM0B,aAAa,GAAIf,KAAKX,MAAM0B,aAAa,IAAKL,KAAMV,KAAKV,eAAe,cAClI,kBAACe,EAAA,EAAD,CAAQC,IAAG,mBAAsBC,SAAU,CAACP,KAAKX,MAAM8B,UAAU,GAAInB,KAAKX,MAAM8B,UAAU,IAAKT,KAAMV,KAAKV,eAAe,iB,GA/BnH8B,IAAMC,W,4FC4DbC,G,kDAvDX,WAAYjC,GAAQ,uCACVA,G,0CAEV,WAAU,IAAD,OACL,OAAIW,KAAKX,MAAMkC,QAEP,kBAACC,GAAA,EAAD,CAAOnD,MAAO,CAAEoD,QAAS,QACrB,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAAC,KAAD,OAEJ,kBAACJ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACC,GAAA,EAAD,CAAYC,MAAM,UAAlB,uBAQXC,OAAOC,oBAAoBlC,KAAKX,MAAMY,SAASkC,OAAS,EAErD,kBAACX,GAAA,EAAD,CAAOnD,MAAO,CAAEoD,QAAS,SACpBQ,OAAOG,KAAKpC,KAAKX,MAAMY,SACnBC,KAAI,SAACI,GAAD,OACD,kBAAC+B,GAAA,EAAD,CAASC,MAAOhC,EAAKiC,aAAYjC,GAC7B,kBAACkC,GAAA,EAAD,CAAOC,aAAc,EAAKpD,MAAMY,QAAQK,GAAMjC,MAAO,CAAEC,MAAOC,GAAe+B,KACxEnC,GAAcmC,SAMlCN,KAAKX,MAAMqD,SAEZ,kBAAClB,GAAA,EAAD,CAAOnD,MAAO,CAAEoD,QAAS,QACrB,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAAC,KAAD,CAAWxD,MAAM,WAErB,kBAACoD,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACC,GAAA,EAAD,CAAYC,MAAM,SAAS1D,MAAM,SAC5B0B,KAAKX,MAAMqD,SAASC,YAOlC,kBAAC,IAAM5C,SAAP,U,GAnDLqB,IAAMC,W,+GC8RTuB,G,kDAhRb,aAAe,IAAD,8BACZ,gBAHFC,WAAa,KAEC,EAiBdC,iBAAmB,SAAC5C,GAAD,OAAU,EAAK2C,WAAa3C,GAAOA,EAAI6C,gBAfxD,EAAKC,MAAQ,CACXC,YAAa,GACbC,cAAe,CAAC,EAAG,GACnBC,WAAY,KACZC,aAAc,KACdnD,QAAS,GACToD,eAAgB,GAChB9B,SAAS,GAEX,EAAK+B,YAAc,EAAKA,YAAY/D,KAAjB,gBACnB,EAAKgE,cAAgB,EAAKA,cAAchE,KAAnB,gBACrB,EAAKiE,kBAAoB,EAAKA,kBAAkBjE,KAAvB,gBACzB,EAAKkE,cAAgB,EAAKA,cAAclE,KAAnB,gBAdT,E,+CAmBd,WAAe,IAAD,OAEZS,KAAK0D,SAAS,CACZnC,SAAS,EACTmB,SAAU,OAGZ,IAAMiB,EAAgBC,EAAQ,KAC1BC,EAAc7D,KAAKgD,MAAMG,WAC7BU,EAAcA,EACXC,WAAW,UAAW9D,KAAKgD,MAAMI,cACjCU,WAAW,QAAS9D,KAAK6C,WAAWkB,YAAYvD,KAChDsD,WAAW,QAAS9D,KAAK6C,WAAWkB,YAAY/C,KACnDgD,QAAQC,IACN,mCACAjE,KAAK6C,WAAWkB,YAChBF,GAEFF,EAAcE,GACXK,MAAK,SAACC,GAEL,IAAMC,EAAgB,GAChBC,EAAgB,GACtBF,EACGG,QAAO,SAACnE,GAAD,OAA2B,SAAfA,EAAMX,MAAkC,QAAfW,EAAMX,OAAmBW,EAAMK,KAAOL,EAAMoE,QACxFrE,KAAI,SAACC,EAAOC,GACX,IAAMhC,EAAM,EAAKmF,cAAcpD,EAAMoE,MACrCH,EAAcI,KAAK,CACjB5D,KAAMT,EAAMoE,KAAK3D,KACjBJ,IAAqB,SAAfL,EAAMX,KAAmBW,EAAMK,IAAML,EAAMW,OAAON,IACxDC,IAAqB,SAAfN,EAAMX,KAAmBW,EAAMM,IAAMN,EAAMW,OAAOL,IACxDjB,KAAMpB,IAEJiG,EAAcI,eAAerG,GAC/BiG,EAAcjG,GAAOiG,EAAcjG,GAAO,EAE1CiG,EAAcjG,GAAO,KAG3B,EAAKsF,SAAS,CACZzD,QAASmE,EACTf,eAAgBgB,EAChB9C,SAAS,EACTmB,SAAU,KACVQ,cAAe,CAAC,EAAKL,WAAWkB,YAAYvD,IAAK,EAAKqC,WAAWkB,YAAY/C,UAGhF0D,OAAM,SAACC,GACN,EAAKjB,SAAS,CACZnC,SAAS,EACTmB,SAAUiC,S,2BAalB,SAAcJ,GACZ,OAAIA,EAAKE,eAAe,SAAyB,WAAdF,EAAKK,KAC/B,SACAL,EAAKE,eAAe,SAAyB,gBAAdF,EAAKK,KACpC,cACAL,EAAKE,eAAe,SAAyB,YAAdF,EAAKK,KACpC,UACAL,EAAKE,eAAe,YAA+B,WAAjBF,EAAKM,QACvC,SACAN,EAAKE,eAAe,UAA2B,aAAfF,EAAKO,MACrC,WACAP,EAAKE,eAAe,YAA+B,aAAjBF,EAAKM,QACvC,WACAN,EAAKE,eAAe,YAA+B,cAAjBF,EAAKM,QACvC,YACAN,EAAKE,eAAe,YAA+B,WAAjBF,EAAKM,QACvC,SACAN,EAAKE,eAAe,YAA+B,YAAjBF,EAAKM,QACvC,UACAN,EAAKE,eAAe,YAA+B,iBAAjBF,EAAKM,QACvC,eACAN,EAAKE,eAAe,YAA+B,SAAjBF,EAAKQ,QACvC,OACAR,EAAKE,eAAe,YAA+B,eAAjBF,EAAKQ,QACvC,aACF,Y,+BAGT,WAAqB,IAAD,OAClBC,UAAUC,YAAYC,oBAAmB,SAAC3E,GACxC,EAAKmD,SAAS,CACZR,cAAe,CAAC3C,EAAS4E,OAAOC,SAAU7E,EAAS4E,OAAOE,gBAG9DC,MAAM,uBAAuBpB,MAAK,SAACqB,GAAD,OAChCA,EAAIC,OAAOtB,MAAK,SAACsB,GACfxB,QAAQC,IAAIuB,GACZ,EAAK9B,SAAS,CAAEP,WAAYqC,Y,+BAKlC,SAAkBC,EAAOC,GACvB1F,KAAK0D,SAAS,CACZN,aAAcsC,M,2BAIlB,SAAcC,GACZ3F,KAAK0D,SAAS,CACZvC,UAAW,CAACwE,EAAEC,OAAO7B,YAAYvD,IAAKmF,EAAEC,OAAO7B,YAAY/C,S,uBAK/D,SAAU0E,GACR,MAAM,GAAN,OAAUA,EAAV,Q,oBAGF,WAAU,IAAD,OACDG,EAAQ,CACZ,CACEH,MAAO,IACPI,MAAO,UAET,CACEJ,MAAO,KACPI,MAAO,UAET,CACEJ,MAAO,IACPI,MAAO,SAIX,OACE,yBAAKnG,UAAU,OACb,kBAACoG,EAAA,EAAD,CACEC,IAAKhG,KAAK8C,iBACVmD,mBAAmB,EACnBnF,OAAQd,KAAKgD,MAAME,cACnBgD,KAAMlG,KAAKgD,MAAMC,YACjBkD,UAAWnG,KAAKyD,eAEhB,kBAAC2C,EAAA,EAAD,CAAe7F,SAAS,YACtB,kBAAC6F,EAAA,EAAcC,UAAf,CAAyBC,SAAO,EAAC1F,KAAK,8BACpC,kBAAC2F,EAAA,EAAD,CACEC,IAAI,wFACJC,YAAY,yNAGhB,kBAACL,EAAA,EAAcC,UAAf,CAAyBC,SAAO,EAAC1F,KAAK,oBACpC,kBAAC2F,EAAA,EAAD,CACEC,IAAI,iEACJC,YAAY,sNACZC,WAAW,UAGf,kBAACN,EAAA,EAAcC,UAAf,CAAyBzF,KAAK,qBAC5B,kBAAC2F,EAAA,EAAD,CACEC,IAAI,oDACJC,YAAY,0QAGhB,kBAACL,EAAA,EAAcC,UAAf,CAAyBzF,KAAK,wBAC5B,kBAAC2F,EAAA,EAAD,CACEC,IAAI,qDACJC,YAAY,oJAGhB,kBAACL,EAAA,EAAcC,UAAf,CAAyBzF,KAAK,gBAC5B,kBAAC2F,EAAA,EAAD,CACEC,IAAI,4EACJC,YAAY,6SACZC,WAAW,OACXC,IAAI,SAGR,kBAACP,EAAA,EAAcC,UAAf,CAAyBzF,KAAK,wBAC5B,kBAAC2F,EAAA,EAAD,CACEC,IAAI,uEACJC,YAAY,oQAGhB,kBAACL,EAAA,EAAcC,UAAf,CAAyBzF,KAAK,4BAC5B,kBAAC2F,EAAA,EAAD,CACEC,IAAI,4EACJC,YAAY,qQAIlB,kBAAC,GAAD,CAASxG,QAASD,KAAKgD,MAAM/C,QAASc,aAAcf,KAAKgD,MAAME,cAAe/B,UAAWnB,KAAKgD,MAAM7B,UAAYnB,KAAKgD,MAAM7B,UAAYnB,KAAKgD,MAAME,cAAehC,OAAQlB,KAAKgD,MAAMI,eACpL,kBAAC,KAAD,CAAS7C,SAAS,WAChB,kBAACqG,GAAA,EAAD,CAAKC,KAAK,QAAQC,QAAS,WACzB9B,UAAUC,YAAYC,oBAAmB,SAAC3E,GACxC,EAAKsC,WAAWkE,QAAQ,CAACxG,EAAS4E,OAAOC,SAAU7E,EAAS4E,OAAOE,iBAGrE,kBAAC,KAAD,QAGJ,kBAAC,KAAD,CAAS9E,SAAS,WAChB,kBAAC,KAAD,CACEyG,QAAS,kBAACJ,GAAA,EAAD,CAAKC,KAAK,SAAQ,kBAAC,KAAD,OAC3BI,OAAK,EACLC,QAAM,IAEL,SAAAC,GAAK,OACJ,yBAAKxH,UAAU,SACb,4BAAQA,UAAU,QAAQmH,QAASK,GAAnC,QAGA,yBAAKxH,UAAU,UAAf,0BACA,yBAAKA,UAAU,WACZ,IACD,kBAAC+B,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,IAEV,kBAACH,GAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GACX,kBAACC,GAAA,EAAD,CAAYqF,GAAG,yBAAyBC,cAAY,IAEpD,kBAACC,GAAA,EAAD,CAAQ5B,MAAO,EAAK1C,MAAMI,aAAcmE,SAAU,EAAK/D,kBACrDgE,kBAAgB,yBAAyBC,KAAM,IAAKC,aAAc,KAAMC,IAAK,IAAKC,IAAK,IACvF/B,MAAOA,EAAOgC,iBAAkB,EAAKC,UAAWC,kBAAkB,QAEtE,kBAACrG,GAAA,EAAD,CAAMG,MAAI,MAId,yBAAKlC,UAAU,WACb,kBAACqI,GAAA,EAAD,CAAQC,QAAQ,YAAY3J,MAAM,UAChCwI,QAAS,WACP,EAAKxD,cACL6D,MAHJ,cAWV,kBAAC,KAAD,CAAS5G,SAAS,cAChB,kBAAC,GAAD,CAAKN,QAASD,KAAKgD,MAAMK,eAAgB9B,QAASvB,KAAKgD,MAAMzB,QAASmB,SAAU1C,KAAKgD,MAAMN,kB,GA3QrFtB,IAAMC,WCfxB6G,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.99daf021.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport LocalPharmacyIcon from '@material-ui/icons/LocalPharmacy';\r\nimport LocalGroceryStoreIcon from '@material-ui/icons/LocalGroceryStore';\r\nimport LocalFloristIcon from '@material-ui/icons/LocalFlorist';\r\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport ChildCareIcon from '@material-ui/icons/ChildCare';\r\nimport ApartmentIcon from '@material-ui/icons/Apartment';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport PoolIcon from '@material-ui/icons/Pool';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport TurnedInIcon from '@material-ui/icons/TurnedIn';\r\nimport TurnedInNotIcon from '@material-ui/icons/TurnedInNot';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport indigo from '@material-ui/core/colors/green';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport red from '@material-ui/core/colors/red';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport brown from '@material-ui/core/colors/brown';\r\nimport cyan from '@material-ui/core/colors/cyan';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\n\r\nconst tagIconMapper = function (tag) {\r\n    switch (tag) {\r\n        case \"position\":\r\n            return <AddIcon style={{\r\n                color: tagColorMapper(tag)\r\n            }} />;\r\n        case \"center\":\r\n            return <CodeIcon style={{\r\n                color: tagColorMapper(tag)\r\n            }} />;\r\n        case \"bakery\":\r\n            return <CakeIcon style={{\r\n                color: tagColorMapper(tag),\r\n                margin: \"2px\"\r\n            }} />;\r\n        case \"college\":\r\n            return <ApartmentIcon style={{\r\n                color: tagColorMapper(tag),\r\n                margin: \"2px\"\r\n            }} />;\r\n        case \"kindergarten\":\r\n            return <ChildCareIcon style={{\r\n                color: tagColorMapper(tag),\r\n                margin: \"2px\"\r\n            }} />;\r\n        case \"school\":\r\n            return <SchoolIcon style={{\r\n                color: tagColorMapper(tag),\r\n                margin: \"2px\"\r\n            }} />;\r\n        case \"supermarket\":\r\n            return <LocalGroceryStoreIcon style={{\r\n                color: tagColorMapper(tag),\r\n                margin: \"2px\"\r\n            }} />;\r\n        case \"swimming\":\r\n            return <PoolIcon style={{\r\n                color: tagColorMapper(tag),\r\n                margin: \"2px\"\r\n            }} />;\r\n        case \"cinema\":\r\n            return <LocalMoviesIcon style={{\r\n                color: tagColorMapper(tag),\r\n                margin: \"2px\"\r\n            }} />;\r\n        case \"playground\":\r\n            return <CategoryIcon style={{\r\n                color: tagColorMapper(tag),\r\n                margin: \"2px\"\r\n            }} />;\r\n        case \"park\":\r\n            return <LocalFloristIcon style={{\r\n                color: tagColorMapper(tag),\r\n                margin: \"2px\"\r\n            }} />;\r\n        case \"pharmacy\":\r\n            return <LocalPharmacyIcon style={{\r\n                color: tagColorMapper(tag),\r\n                margin: \"2px\"\r\n            }} />;\r\n        case \"chemist\":\r\n            return <AddShoppingCartIcon style={{\r\n                color: tagColorMapper(tag),\r\n                margin: \"2px\"\r\n            }} />;\r\n        case \"unknown\":\r\n            return <TurnedInIcon style={{\r\n                color: tagColorMapper(tag),\r\n                margin: \"2px\"\r\n            }} />;\r\n        default:\r\n            return <TurnedInNotIcon style={{\r\n                color: tagColorMapper(tag),\r\n                margin: \"2px\"\r\n            }} />;\r\n    }\r\n}\r\n\r\nconst tagColorMapper = function (tag) {\r\n    switch (tag) {\r\n        case \"position\":\r\n            return blue[500];\r\n        case \"center\":\r\n            return blue[500];\r\n        case \"bakery\":\r\n            return amber[500];\r\n        case \"supermarket\":\r\n            return brown[500];\r\n        case \"swimming\":\r\n            return indigo[500];\r\n        case \"cinema\":\r\n            return purple[500];\r\n        case \"playground\":\r\n            return teal[500];\r\n        case \"park\":\r\n            return green[500];\r\n        case \"pharmacy\":\r\n            return red[500];\r\n        case \"unknown\":\r\n            return grey[500];\r\n        case \"school\":\r\n            return cyan[500];\r\n        case \"kindergarten\":\r\n            return pink[500];\r\n        default:\r\n            return grey[900];\r\n    }\r\n}\r\nexport {\r\n    tagIconMapper, tagColorMapper\r\n};\r\n//export default [tagIconMapper, tagColorMapper]","import React from \"react\";\r\nimport { Marker, Popup, Circle } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { tagIconMapper } from './Mapping.js'\r\n\r\nclass Markers extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getIconForType = this.getIconForType.bind(this);\r\n    }\r\n\r\n    getIconForType(type) {\r\n        return L.divIcon({//TODO: set iconAnchor\r\n            className: 'custom-icon',\r\n            html: ReactDOMServer.renderToString(tagIconMapper(type))\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.osmData\r\n                    .map((entry, idx) => (\r\n                        <Marker key={`marker-${idx}`} position={[entry.lat, entry.lon]} icon={this.getIconForType(entry.type)}>\r\n                            <Popup>\r\n                                <span>{entry.type}</span>:\r\n                                <span>{entry.name}</span>\r\n                            </Popup>\r\n                        </Marker>\r\n                    ))}\r\n                <Circle\r\n                    center={{ lat: this.props.searchCenter[0], lng: this.props.searchCenter[1] }}\r\n                    fillColor=\"blue\"\r\n                    radius={this.props.radius} />\r\n                <Marker key={`marker-searchCenter`} position={[this.props.searchCenter[0], this.props.searchCenter[1]]} icon={this.getIconForType(\"position\")} />\r\n                <Marker key={`marker-mapCenter`} position={[this.props.mapCenter[0], this.props.mapCenter[1]]} icon={this.getIconForType(\"center\")} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Markers;","import React from \"react\";\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { tagIconMapper, tagColorMapper } from './Mapping'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\n\r\nclass Bar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.loading) {\r\n            return (\r\n                <Paper style={{ padding: \"5px\" }}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={2}>\r\n                            <CachedIcon />\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <Typography align=\"center\">\r\n                                loading OSM data\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper  >\r\n            );\r\n        } else {\r\n            if ((Object.getOwnPropertyNames(this.props.osmData).length > 0))\r\n                return (\r\n                    <Paper style={{ padding: \"10px\" }}>\r\n                        {Object.keys(this.props.osmData)\r\n                            .map((key) => (\r\n                                <Tooltip title={key} aria-label={key}>\r\n                                    <Badge badgeContent={this.props.osmData[key]} style={{ color: tagColorMapper(key) }}>\r\n                                        {tagIconMapper(key)}\r\n                                    </Badge>\r\n                                </Tooltip>\r\n                            ))}\r\n                    </Paper  >\r\n                );\r\n            else if (this.props.osmError) {\r\n                return (\r\n                    <Paper style={{ padding: \"5px\" }}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={2}>\r\n                                <ErrorIcon color=\"error\" />\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <Typography align=\"center\" color=\"error\">\r\n                                    {this.props.osmError.message}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper  >\r\n                );\r\n            } else {\r\n                return <React.Fragment />\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\nexport default Bar;","import React from \"react\";\r\nimport { Map, TileLayer, LayersControl } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"./App.css\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"leaflet-fullscreen/dist/leaflet.fullscreen.css\";\r\nimport \"leaflet-fullscreen/dist/Leaflet.fullscreen.js\";\r\nimport Markers from \"./Markers\"\r\nimport Bar from \"./Bar\"\r\nimport Control from 'react-leaflet-control';\r\nimport GpsNotFixedIcon from '@material-ui/icons/GpsNotFixed';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Popup from 'reactjs-popup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass App extends React.Component {\r\n  leafletMap = null;\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      defaultZoom: 13,\r\n      defaultCenter: [0, 9],\r\n      osmRequest: null,\r\n      defaultRange: 1500,\r\n      osmData: [],\r\n      osmDataCounted: {},\r\n      loading: false\r\n    };\r\n    this.loadOSMData = this.loadOSMData.bind(this);\r\n    this.getTypeByTags = this.getTypeByTags.bind(this);\r\n    this.handleRangeChange = this.handleRangeChange.bind(this);\r\n    this.handleMoveEnd = this.handleMoveEnd.bind(this);\r\n  }\r\n\r\n  setLeafletMapRef = (map) => (this.leafletMap = map && map.leafletElement);\r\n\r\n  loadOSMData() {\r\n    //clear old map   \r\n    this.setState({\r\n      loading: true,\r\n      osmError: null\r\n    });\r\n    // get new data\r\n    const queryOverpass = require(\"@derhuerst/query-overpass\");\r\n    var requestBody = this.state.osmRequest;\r\n    requestBody = requestBody\r\n      .replaceAll(\"<RANGE>\", this.state.defaultRange)\r\n      .replaceAll(\"<LAT>\", this.leafletMap.getCenter().lat)\r\n      .replaceAll(\"<LON>\", this.leafletMap.getCenter().lng);\r\n    console.log(\r\n      \"requesting OSM data for position\",\r\n      this.leafletMap.getCenter(),\r\n      requestBody\r\n    );\r\n    queryOverpass(requestBody)\r\n      .then((response) => {\r\n        // enhance the osm Response\r\n        const parsedEntries = [];\r\n        const entryMapCount = {};\r\n        response\r\n          .filter((entry) => (entry.type === \"node\" || entry.type === \"way\") && entry.lat && entry.tags)\r\n          .map((entry, idx) => {\r\n            const tag = this.getTypeByTags(entry.tags);\r\n            parsedEntries.push({\r\n              name: entry.tags.name,\r\n              lat: (entry.type === \"node\") ? entry.lat : entry.center.lat,\r\n              lon: (entry.type === \"node\") ? entry.lon : entry.center.lon,\r\n              type: tag\r\n            })\r\n            if (entryMapCount.hasOwnProperty(tag)) {\r\n              entryMapCount[tag] = entryMapCount[tag] + 1;\r\n            } else {\r\n              entryMapCount[tag] = 1;\r\n            }\r\n          });\r\n        this.setState({\r\n          osmData: parsedEntries,\r\n          osmDataCounted: entryMapCount,\r\n          loading: false,\r\n          osmError: null,\r\n          defaultCenter: [this.leafletMap.getCenter().lat, this.leafletMap.getCenter().lng]\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          loading: false,\r\n          osmError: error\r\n        });\r\n      });\r\n\r\n    /*\r\n     this.state.osmData.forEach(entry =>{\r\n        if(entry.tags&&entry.tags.name){\r\n          console.log(entry.tags.name, entry);\r\n        }\r\n      })\r\n    */\r\n  }\r\n\r\n  getTypeByTags(tags) {\r\n    if (tags.hasOwnProperty(\"shop\") && tags.shop === \"bakery\")\r\n      return \"bakery\"\r\n    else if (tags.hasOwnProperty(\"shop\") && tags.shop === \"supermarket\")\r\n      return \"supermarket\"\r\n    else if (tags.hasOwnProperty(\"shop\") && tags.shop === \"chemist\")\r\n      return \"chemist\"\r\n    else if (tags.hasOwnProperty(\"amenity\") && tags.amenity === \"cinema\")\r\n      return \"cinema\"\r\n    else if (tags.hasOwnProperty(\"sport\") && tags.sport === \"swimming\")\r\n      return \"swimming\"\r\n    else if (tags.hasOwnProperty(\"amenity\") && tags.amenity === \"pharmacy\")\r\n      return \"pharmacy\"\r\n    else if (tags.hasOwnProperty(\"amenity\") && tags.amenity === \"ice_cream\")\r\n      return \"ice_cream\"\r\n    else if (tags.hasOwnProperty(\"amenity\") && tags.amenity === \"school\")\r\n      return \"school\"\r\n    else if (tags.hasOwnProperty(\"amenity\") && tags.amenity === \"college\")\r\n      return \"college\"\r\n    else if (tags.hasOwnProperty(\"amenity\") && tags.amenity === \"kindergarten\")\r\n      return \"kindergarten\"\r\n    else if (tags.hasOwnProperty(\"leisure\") && tags.leisure === \"park\")\r\n      return \"park\"\r\n    else if (tags.hasOwnProperty(\"leisure\") && tags.leisure === \"playground\")\r\n      return \"playground\"\r\n    return \"unknown\";\r\n  }\r\n\r\n  componentDidMount() {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.setState({\r\n        defaultCenter: [position.coords.latitude, position.coords.longitude]\r\n      });\r\n    });\r\n    fetch(\"data/overpassQL.txt\").then((res) =>\r\n      res.text().then((text) => {\r\n        console.log(text);\r\n        this.setState({ osmRequest: text });\r\n      })\r\n    );\r\n  }\r\n\r\n  handleRangeChange(event, value) {\r\n    this.setState({\r\n      defaultRange: value\r\n    });\r\n  }\r\n\r\n  handleMoveEnd(e) {\r\n    this.setState({\r\n      mapCenter: [e.target.getCenter().lat, e.target.getCenter().lng]\r\n    });\r\n  }\r\n\r\n\r\n  valuetext(value) {\r\n    return `${value}km`;\r\n  }\r\n\r\n  render() {\r\n    const marks = [\r\n      {\r\n        value: 500,\r\n        label: '0.5 km',\r\n      },\r\n      {\r\n        value: 1500,\r\n        label: '1.5 km',\r\n      },\r\n      {\r\n        value: 3000,\r\n        label: '3 km',\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Map\r\n          ref={this.setLeafletMapRef}\r\n          fullscreenControl={true}\r\n          center={this.state.defaultCenter}\r\n          zoom={this.state.defaultZoom}\r\n          onMoveEnd={this.handleMoveEnd}\r\n        >\r\n          <LayersControl position=\"topright\">\r\n            <LayersControl.BaseLayer checked name=\"CartoDB.VoyagerLabelsUnder\">\r\n              <TileLayer\r\n                url='https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}{r}.png'\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a> | Data mining by [<a href=\"http://overpass-api.de/\">Overpass API</a>]'\r\n              />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer checked name=\"CartoDB.Positron\">\r\n              <TileLayer\r\n                url='https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png'\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a> | Data mining by [<a href=\"http://overpass-api.de/\">Overpass API</a>]'\r\n                subdomains='abcd'\r\n              />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"OpenStreetMap.BZH\">\r\n              <TileLayer\r\n                url=\"https://tile.openstreetmap.bzh/br/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Tiles courtesy of <a href=\"http://www.openstreetmap.bzh/\" target=\"_blank\">Breton OpenStreetMap Team</a> | Data mining by [<a href=\"http://overpass-api.de/\">Overpass API</a>]'\r\n              />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"OpenStreetMap.Mapnik\">\r\n              <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> | Data mining by [<a href=\"http://overpass-api.de/\">Overpass API</a>]'\r\n              />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"Stamen.Toner\">\r\n              <TileLayer\r\n                url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.{ext}\"\r\n                attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors | Data mining by [<a href=\"http://overpass-api.de/\">Overpass API</a>]'\r\n                subdomains='abcd'\r\n                ext='png'\r\n              />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"Stadia.AlidadeSmooth\">\r\n              <TileLayer\r\n                url='https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png'\r\n                attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors | Data mining by [<a href=\"http://overpass-api.de/\">Overpass API</a>]'\r\n              />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"Stadia.AlidadeSmoothDark\">\r\n              <TileLayer\r\n                url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"\r\n                attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors | Data mining by [<a href=\"http://overpass-api.de/\">Overpass API</a>]'\r\n              />\r\n            </LayersControl.BaseLayer>\r\n          </LayersControl>\r\n          <Markers osmData={this.state.osmData} searchCenter={this.state.defaultCenter} mapCenter={this.state.mapCenter ? this.state.mapCenter : this.state.defaultCenter} radius={this.state.defaultRange} />\r\n          <Control position=\"topleft\" >\r\n            <Fab size=\"small\" onClick={() => {\r\n              navigator.geolocation.getCurrentPosition((position) => {\r\n                this.leafletMap.setView([position.coords.latitude, position.coords.longitude]);\r\n              });\r\n            }}>\r\n              <GpsNotFixedIcon />\r\n            </Fab>\r\n          </Control>\r\n          <Control position=\"topleft\" >\r\n            <Popup\r\n              trigger={<Fab size=\"small\"><AutorenewIcon /></Fab >}\r\n              modal\r\n              nested\r\n            >\r\n              {close => (\r\n                <div className=\"modal\">\r\n                  <button className=\"close\" onClick={close}>\r\n                    &times;\r\n                  </button>\r\n                  <div className=\"header\"> select search radius </div>\r\n                  <div className=\"content\">\r\n                    {' '}\r\n                    <Grid container spacing={2}>\r\n                      <Grid item>\r\n                      </Grid>\r\n                      <Grid item xs>\r\n                        <Typography id=\"discrete-slider-always\" gutterBottom>\r\n                        </Typography>\r\n                        <Slider value={this.state.defaultRange} onChange={this.handleRangeChange}\r\n                          aria-labelledby=\"discrete-slider-always\" step={500} defaultValue={1500} min={500} max={3000}\r\n                          marks={marks} getAriaValueText={this.valuetext} valueLabelDisplay=\"on\" />\r\n                      </Grid>\r\n                      <Grid item>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                  <div className=\"actions\">\r\n                    <Button variant=\"contained\" color=\"primary\"\r\n                      onClick={() => {\r\n                        this.loadOSMData();\r\n                        close();\r\n                      }}\r\n                    >load</Button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Popup>\r\n          </Control>\r\n          <Control position=\"bottomleft\" >\r\n            <Bar osmData={this.state.osmDataCounted} loading={this.state.loading} osmError={this.state.osmError} />\r\n          </Control>\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}