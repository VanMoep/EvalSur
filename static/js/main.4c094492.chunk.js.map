{"version":3,"sources":["Mapping.js","Markers.js","ResultListDialog.js","Bar.js","RangeDialog.js","App.js","index.js"],"names":["mapping","icon","style","color","amber","margin","tags","hasOwnProperty","shop","query","grey","amenity","pink","cyan","brown","indigo","sport","purple","teal","leisure","green","red","overpassQuery","types","forEach","type","typeIconMapper","typeColorMapper","blue","Markers","props","getIconForType","bind","L","divIcon","className","html","ReactDOMServer","renderToString","Fragment","this","osmData","map","entry","idx","Marker","key","position","lat","lon","Popup","name","Circle","center","searchCenter","lng","fillColor","radius","mapCenter","React","Component","useStyles","makeStyles","theme","appBar","title","marginLeft","spacing","flex","ResultListDialog","osmDataCounted","range","classes","useState","open","setOpen","handleClose","Paper","onClick","padding","Object","keys","Tooltip","aria-label","Badge","badgeContent","Dialog","fullScreen","onClose","AppBar","Toolbar","IconButton","edge","Typography","variant","List","dense","ListItem","alignItems","ListItemAvatar","Avatar","ListItemText","primary","secondary","address","street","housenumber","postcode","city","ListItemIcon","disabled","phone","window","website","Bar","loading","Grid","container","item","xs","align","getOwnPropertyNames","length","osmError","message","RangeDialog","defaultRange","handleRangeChange","loadOSMData","Fab","size","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","gutterBottom","Slider","value","onChange","step","defaultValue","min","max","marks","label","getAriaValueText","valueLabelDisplay","DialogActions","Button","autoFocus","App","leafletMap","setLeafletMapRef","leafletElement","state","defaultZoom","defaultCenter","osmRequest","handleMove","handleOSMResponse","setState","queryOverpass","require","requestBody","replaceAll","getCenter","console","log","then","response","catch","error","parsedEntries","entryMapCount","filter","tag","foundType","tagTypeMapper","push","openingHours","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","searchControl","SearchControl","provider","OpenStreetMapProvider","showMarker","addControl","event","e","target","Map","ref","zoom","zoomControl","onMove","LayersControl","BaseLayer","checked","TileLayer","url","attribution","subdomains","ext","ZoomControl","setView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+3BA8BMA,GAAU,CACZ,OAAU,CACNC,KAAM,kBAAC,IAAD,CAAUC,MAAO,CACnBC,MAAOC,KAAM,KACbC,OAAQ,SAEZF,MAAOC,KAAM,KACbE,KAAM,SAAUA,GACZ,OAAQA,EAAKC,eAAe,SAAyB,WAAdD,EAAKE,MAEhDC,MAAO,qBAEX,QAAW,CACPR,KAAM,kBAAC,IAAD,CAAeC,MAAO,CACxBC,MAAOO,KAAK,KACZL,OAAQ,SAEZF,MAAOO,KAAK,KACZJ,KAAM,SAAUA,GACZ,OAAQA,EAAKC,eAAe,YAA+B,YAAjBD,EAAKK,SAEnDF,MAAO,yBAEX,aAAgB,CACZR,KAAM,kBAAC,IAAD,CAAeC,MAAO,CACxBC,MAAOS,KAAK,KACZP,OAAQ,SAEZF,MAAOS,KAAK,KACZN,KAAM,SAAUA,GACZ,OAAQA,EAAKC,eAAe,YAA+B,iBAAjBD,EAAKK,SAEnDF,MAAO,8BAEX,OAAU,CACNR,KAAM,kBAAC,IAAD,CAAYC,MAAO,CACrBC,MAAOU,KAAK,KACZR,OAAQ,SAEZF,MAAOU,KAAK,KACZP,KAAM,SAAUA,GACZ,OAAQA,EAAKC,eAAe,YAA+B,WAAjBD,EAAKK,SAEnDF,MAAO,wBAEX,YAAe,CACXR,KAAM,kBAAC,IAAD,CAAuBC,MAAO,CAChCC,MAAOW,KAAM,KACbT,OAAQ,SAEZF,MAAOW,KAAM,KACbR,KAAM,SAAUA,GACZ,OAAQA,EAAKC,eAAe,SAAyB,gBAAdD,EAAKE,MAEhDC,MAAO,0BAEX,SAAY,CACRR,KAAM,kBAAC,IAAD,CAAUC,MAAO,CACnBC,MAAOY,IAAO,KACdV,OAAQ,SAEZF,MAAOY,IAAO,KACdT,KAAM,SAAUA,GACZ,OAAQA,EAAKC,eAAe,UAA2B,aAAfD,EAAKU,OAEjDP,MAAO,wBAEX,OAAU,CACNR,KAAM,kBAAC,IAAD,CAAiBC,MAAO,CAC1BC,MAAOc,KAAO,KACdZ,OAAQ,SAEZF,MAAOc,KAAO,KACdX,KAAM,SAAUA,GACZ,OAAQA,EAAKC,eAAe,YAA+B,WAAjBD,EAAKK,SAEnDF,MAAO,wBAEX,WAAc,CACVR,KAAM,kBAAC,IAAD,CAAcC,MAAO,CACvBC,MAAOe,KAAK,KACZb,OAAQ,SAEZF,MAAOe,KAAK,KACZZ,KAAM,SAAUA,GACZ,OAAQA,EAAKC,eAAe,YAA+B,eAAjBD,EAAKa,SAEnDV,MAAO,kDAEX,KAAQ,CACJR,KAAM,kBAAC,IAAD,CAAkBC,MAAO,CAC3BC,MAAOiB,IAAM,KACbf,OAAQ,SAEZF,MAAOiB,IAAM,KACbd,KAAM,SAAUA,GACZ,OAAQA,EAAKC,eAAe,YAA+B,SAAjBD,EAAKa,SAEnDV,MAAO,sBAEX,SAAY,CACRR,KAAM,kBAAC,IAAD,CAAmBC,MAAO,CAC5BC,MAAOkB,KAAI,KACXhB,OAAQ,SAEZF,MAAOkB,KAAI,KACXf,KAAM,SAAUA,GACZ,OAAQA,EAAKC,eAAe,YAA+B,aAAjBD,EAAKK,SAEnDF,MAAO,0BAEX,QAAW,CACPR,KAAM,kBAAC,IAAD,CAAqBC,MAAO,CAC9BC,MAAOkB,KAAI,KACXhB,OAAQ,SAEZF,MAAOkB,KAAI,KACXf,KAAM,SAAUA,GACZ,OAAQA,EAAKC,eAAe,SAAyB,YAAdD,EAAKE,MAEhDC,MAAO,uBAITa,GAAgB,SAAUC,GAC5B,IAAId,EAAQ,8BAKZ,OAJAc,EAAMC,SAAQ,SAAAC,GACVhB,GAAS,WAAaT,GAAQyB,GAAMhB,MAAQ,oCAEhDA,GAAS,oCAQPiB,GAAiB,SAAUD,GAC7B,MAAa,aAATA,EACO,kBAAC,IAAD,CAASvB,MAAO,CACnBC,MAAOwB,GAAgBF,MAEhB,WAATA,EACK,kBAAC,KAAD,CAAUvB,MAAO,CACpBC,MAAOwB,GAAgBF,MAEhB,YAATA,EACK,kBAAC,IAAD,CAAcvB,MAAO,CACxBC,MAAOwB,GAAgBF,GACvBpB,OAAQ,SAGZL,GAAQO,eAAekB,GAChBzB,GAAQyB,GAAMxB,KAEd,kBAAC,IAAD,CAAiBC,MAAO,CAC3BC,MAAOwB,GAAgBF,GACvBpB,OAAQ,UAIdsB,GAAkB,SAAUF,GAC9B,MAAa,aAATA,GAEW,WAATA,EADKG,KAAK,KAIZ5B,GAAQO,eAAekB,GAChBzB,GAAQyB,GAAMtB,MAEdO,KAAK,MC9JLmB,G,kDAlCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,eAAiB,EAAKA,eAAeC,KAApB,gBAFP,E,kDAKnB,SAAeP,GACX,OAAOQ,IAAEC,QAAQ,CACbC,UAAW,cACXC,KAAMC,IAAeC,eAAeZ,GAAeD,Q,oBAI3D,WAAU,IAAD,OACL,OACI,kBAAC,IAAMc,SAAP,KACKC,KAAKV,MAAMW,QACPC,KAAI,SAACC,EAAOC,GAAR,OACD,kBAACC,EAAA,EAAD,CAAQC,IAAG,iBAAYF,GAAOG,SAAU,CAACJ,EAAMK,IAAKL,EAAMM,KAAMhD,KAAM,EAAK8B,eAAeY,EAAMlB,OAC5F,kBAACyB,EAAA,EAAD,KACI,8BAAOP,EAAMlB,MADjB,IAEI,8BAAOkB,EAAMQ,WAI7B,kBAACC,EAAA,EAAD,CACIC,OAAQ,CAAEL,IAAKR,KAAKV,MAAMwB,aAAa,GAAIC,IAAKf,KAAKV,MAAMwB,aAAa,IACxEE,UAAU,OACVC,OAAQjB,KAAKV,MAAM2B,SACvB,kBAACZ,EAAA,EAAD,CAAQC,IAAG,sBAAyBC,SAAU,CAACP,KAAKV,MAAMwB,aAAa,GAAId,KAAKV,MAAMwB,aAAa,IAAKrD,KAAMuC,KAAKT,eAAe,cAClI,kBAACc,EAAA,EAAD,CAAQC,IAAG,mBAAsBC,SAAU,CAACP,KAAKV,MAAM4B,UAAU,GAAIlB,KAAKV,MAAM4B,UAAU,IAAKzD,KAAMuC,KAAKT,eAAe,iB,GA/BnH4B,IAAMC,W,sSCWtBC,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNjB,SAAU,YAEZkB,MAAO,CACLC,WAAYH,EAAMI,QAAQ,GAC1BC,KAAM,OAIK,SAASC,GAAT,GAIX,IAHFC,EAGC,EAHDA,eACA7B,EAEC,EAFDA,QACA8B,EACC,EADDA,MAEMC,EAAUX,KAChB,EAAwBF,IAAMc,UAAS,GAAvC,oBAAOC,EAAP,KAAaC,EAAb,KAMMC,EAAc,WAClBD,GAAQ,IAGV,OACE,6BACE,kBAACE,GAAA,EAAD,CAAOC,QAVa,WACtBH,GAAQ,IAS2BzE,MAAO,CAAE6E,QAAS,SAChDC,OAAOC,KAAKX,GACV5B,KAAI,SAACI,GAAD,OACH,kBAACoC,GAAA,EAAD,CAASpC,IAAG,kBAAaA,GAAOmB,MAAOnB,EAAKqC,aAAYrC,GACtD,kBAACsC,GAAA,EAAD,CAAOC,aAAcf,EAAexB,GAAM5C,MAAO,CAAEC,MAAOwB,GAAgBmB,KACvEpB,GAAeoB,SAK1B,kBAACwC,GAAA,EAAD,CAAQC,YAAU,EAACb,KAAMA,EAAMc,QAASZ,GACtC,kBAACa,GAAA,EAAD,CAAQtD,UAAWqC,EAAQR,QACzB,kBAAC0B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,KAAK,QAAQzF,MAAM,UAAU2E,QAASF,EAAaO,aAAW,SACxE,kBAAC,KAAD,OAEF,kBAACU,GAAA,EAAD,CAAYC,QAAQ,KAAK3D,UAAWqC,EAAQP,OAA5C,eACeM,EADf,aAKJ,kBAACwB,GAAA,EAAD,CAAMC,OAAO,GACVvD,EACEC,KAAI,SAACC,EAAOC,GAAR,OACH,kBAACqD,GAAA,EAAD,CAAUC,WAAW,aAAapD,IAAG,mBAAcF,IACjD,kBAACuD,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACG1E,GAAeiB,EAAMlB,QAG1B,kBAAC4E,GAAA,EAAD,CAAcC,QAAS3D,EAAMQ,KAAMoD,UAAW5D,EAAM6D,QAAQC,OAAS,IAAM9D,EAAM6D,QAAQE,YAAc,KAAO/D,EAAM6D,QAAQG,SAAW,IAAMhE,EAAM6D,QAAQI,OAC3J,kBAACC,GAAA,EAAD,KACE,kBAAClB,GAAA,EAAD,CAAYxF,MAAM,UAAU2G,UAAWnE,EAAMoE,MAAOjC,QAAS,kBAAMkC,OAAOtC,KAAK,OAAS/B,EAAMoE,MAAO,YACnG,kBAAC,KAAD,QAGJ,kBAACF,GAAA,EAAD,KACE,kBAAClB,GAAA,EAAD,CAAYxF,MAAM,UAAU2G,UAAWnE,EAAMsE,QAASnC,QAAS,kBAAMkC,OAAOtC,KAAK/B,EAAMsE,QAAS,YAC9F,kBAAC,KAAD,QAGJ,kBAACJ,GAAA,EAAD,KACE,kBAAClB,GAAA,EAAD,CAAYxF,MAAM,UAAU2E,QAAS,kBAAMkC,OAAOtC,KAAK,sDAAwD/B,EAAMK,IAAM,MAAQL,EAAMM,IAAK,YAC5I,kBAAC,KAAD,e,ICpCLiE,G,4JA3CX,WACI,OAAI1E,KAAKV,MAAMqF,QAEP,kBAACtC,GAAA,EAAD,CAAO3E,MAAO,CAAE6E,QAAS,QACrB,kBAACqC,GAAA,EAAD,CAAMC,WAAS,EAAClD,QAAS,GACrB,kBAACiD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAAC,KAAD,OAEJ,kBAACH,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAAC1B,GAAA,EAAD,CAAY2B,MAAM,UAAlB,uBAQXxC,OAAOyC,oBAAoBjF,KAAKV,MAAMwC,gBAAgBoD,OAAS,EAE5D,kBAACrD,GAAD,CAAkBC,eAAgB9B,KAAKV,MAAMwC,eAAgB7B,QAASD,KAAKV,MAAMW,QAAS8B,MAAO/B,KAAKV,MAAMyC,QAE3G/B,KAAKV,MAAM6F,SAEZ,kBAAC9C,GAAA,EAAD,CAAO3E,MAAO,CAAE6E,QAAS,QACrB,kBAACqC,GAAA,EAAD,CAAMC,WAAS,EAAClD,QAAS,GACrB,kBAACiD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAAC,KAAD,CAAWpH,MAAM,WAErB,kBAACiH,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAAC1B,GAAA,EAAD,CAAY2B,MAAM,SAASrH,MAAM,SAC5BqC,KAAKV,MAAM6F,SAASC,YAOlC,kBAAC,IAAMrF,SAAP,U,GAvCLoB,IAAMC,W,0HCKT,SAASiE,GAAT,GAIX,IAHAC,EAGD,EAHCA,aACAC,EAED,EAFCA,kBACAC,EACD,EADCA,YAEA,EAAwBrE,IAAMc,UAAS,GAAvC,oBAAOC,EAAP,KAAaC,EAAb,KAMMC,EAAc,WAChBD,GAAQ,IA4BZ,OACI,6BACI,kBAACsD,GAAA,EAAD,CAAKC,KAAK,QAAQpD,QAnCF,WACpBH,GAAQ,KAkCwC,kBAAC,KAAD,OAC5C,kBAACW,GAAA,EAAD,CACIZ,KAAMA,EACNc,QAASZ,EACTuD,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAaC,GAAG,sBAAsB,gCACtC,kBAACC,GAAA,EAAD,KACI,kBAACnB,GAAA,EAAD,CAAMC,WAAS,EAAClD,QAAS,GACrB,kBAACiD,GAAA,EAAD,CAAME,MAAI,IAEV,kBAACF,GAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACT,kBAAC1B,GAAA,EAAD,CAAYyC,GAAG,yBAAyBE,cAAY,IAEpD,kBAACC,GAAA,EAAD,CAAQC,MAAOZ,EAAca,SAAUZ,EACnCI,kBAAgB,yBAAyBS,KAAM,IAAKC,aAAc,KAAMC,IAAK,IAAKC,IAAK,IACvFC,MAvCd,CACV,CACIN,MAAO,IACPO,MAAO,UAEX,CACIP,MAAO,KACPO,MAAO,UAEX,CACIP,MAAO,IACPO,MAAO,SA4B2BC,iBAxB1C,SAAmBR,GACf,MAAM,GAAN,OAAUA,EAAV,OAuBmES,kBAAkB,SAErE,kBAAC/B,GAAA,EAAD,CAAME,MAAI,MAIlB,kBAAC8B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQvE,QAASF,GAAjB,UAGA,kBAACyE,GAAA,EAAD,CAAQvE,QAtDL,WACfH,GAAQ,GACRqD,KAoDyC7H,MAAM,UAAUmJ,WAAS,GAAtD,W,aC0ILC,I,yDA1Mb,aAAe,IAAD,8BACZ,gBAHFC,WAAa,KAEC,EAiBdC,iBAAmB,SAAC/G,GAAD,OAAU,EAAK8G,WAAa9G,GAAOA,EAAIgH,gBAfxD,EAAKC,MAAQ,CACXC,YAAa,GACbC,cAAe,CAAC,EAAG,GACnBC,WAAY,KACZhC,aAAc,KACdrF,QAAS,GACT6B,eAAgB,GAChB6C,SAAS,GAEX,EAAKa,YAAc,EAAKA,YAAYhG,KAAjB,gBACnB,EAAK+F,kBAAoB,EAAKA,kBAAkB/F,KAAvB,gBACzB,EAAK+H,WAAa,EAAKA,WAAW/H,KAAhB,gBAClB,EAAKgI,kBAAoB,EAAKA,kBAAkBhI,KAAvB,gBAdb,E,+CAmBd,WAAe,IAAD,OAEZQ,KAAKyH,SAAS,CACZ9C,SAAS,EACTQ,SAAU,OAGZ,IAAMuC,EAAgBC,EAAQ,KAC1BC,EAAc5H,KAAKmH,MAAMG,WAC7BM,EAAcA,EACXC,WAAW,UAAW7H,KAAKmH,MAAM7B,cACjCuC,WAAW,QAAS7H,KAAKgH,WAAWc,YAAYtH,KAChDqH,WAAW,QAAS7H,KAAKgH,WAAWc,YAAY/G,KACnDgH,QAAQC,IACN,mCACAhI,KAAKgH,WAAWc,YAChBF,GAEFF,EAAcE,GACXK,MAAK,SAACC,GACL,EAAKV,kBAAkBU,MAExBC,OAAM,SAACC,GACN,EAAKX,SAAS,CACZ9C,SAAS,EACTQ,SAAUiD,S,+BAKlB,SAAkBF,GAEhB,IAAMG,EAAgB,GAChBC,EAAgB,GACtBJ,EACGK,QAAO,SAACpI,GAAD,OAA2B,SAAfA,EAAMlB,MAAkC,QAAfkB,EAAMlB,OAAmBkB,EAAMK,KAAOL,EAAMrC,QACxFoC,KAAI,SAACC,EAAOC,GACX,IAAMoI,ELkIQ,SAAU1K,GAC5B,IAAI2K,EAAY,UAOhB,OANAjG,OAAOC,KAAKjF,IAASwB,SAAQ,SAAUC,GAC/BzB,GAAQyB,GAAMnB,KAAKA,KACnB2K,EAAYxJ,MAIbwJ,EK1ISC,CAAcvI,EAAMrC,MAChCuK,EAAcM,KAAK,CACjBhI,KAAMR,EAAMrC,KAAK6C,KACjBH,IAAqB,SAAfL,EAAMlB,KAAmBkB,EAAMK,IAAML,EAAMU,OAAOL,IACxDC,IAAqB,SAAfN,EAAMlB,KAAmBkB,EAAMM,IAAMN,EAAMU,OAAOJ,IACxDxB,KAAMuJ,EACNxE,QAAS,CACPI,KAAMjE,EAAMrC,KAAK,aACjBoG,YAAa/D,EAAMrC,KAAK,oBACxBqG,SAAUhE,EAAMrC,KAAK,iBACrBmG,OAAQ9D,EAAMrC,KAAK,gBAErB8K,aAAczI,EAAMrC,KAAN,cACd2G,QAAStE,EAAMrC,KAAK2G,QACpBF,MAAOpE,EAAMrC,KAAKyG,QAEhB+D,EAAcvK,eAAeyK,GAC/BF,EAAcE,GAAOF,EAAcE,GAAO,EAE1CF,EAAcE,GAAO,KAG3BxI,KAAKyH,SAAS,CACZxH,QAASoI,EACTvG,eAAgBwG,EAChB3D,SAAS,EACTQ,SAAU,KACVkC,cAAe,CAACrH,KAAKgH,WAAWc,YAAYtH,IAAKR,KAAKgH,WAAWc,YAAY/G,S,+BAIjF,WAAqB,IAAD,OAClB8H,UAAUC,YAAYC,oBAAmB,SAACxI,GACxC,EAAKkH,SAAS,CACZJ,cAAe,CAAC9G,EAASyI,OAAOC,SAAU1I,EAASyI,OAAOE,gBAS9DlJ,KAAKyH,SAAS,CACZH,WAAYxI,GL+CP0D,OAAOC,KAAKjF,OK7CnB,IAAM2L,EAAgB,IAAIC,KAAc,CACtCC,SAAU,IAAIC,KACd5L,MAAO,MACP6L,YAAY,IAEdvJ,KAAKgH,WAAWwC,WAAWL,K,+BAG7B,SAAkBM,EAAOvD,GACvBlG,KAAKyH,SAAS,CACZnC,aAAcY,M,wBAIlB,SAAWwD,GACT1J,KAAKyH,SAAS,CACZvG,UAAW,CAACwI,EAAEC,OAAO7B,YAAYtH,IAAKkJ,EAAEC,OAAO7B,YAAY/G,S,oBAI/D,WAAU,IAAD,OACP,OACE,yBAAKpB,UAAU,OACb,kBAACiK,EAAA,EAAD,CACEC,IAAK7J,KAAKiH,iBACVpG,OAAQb,KAAKmH,MAAME,cACnByC,KAAM9J,KAAKmH,MAAMC,YACjB2C,aAAa,EACbC,OAAQhK,KAAKuH,YAEb,kBAAC0C,EAAA,EAAD,CAAe1J,SAAS,YACtB,kBAAC0J,EAAA,EAAcC,UAAf,CAAyBC,SAAO,EAACxJ,KAAK,8BACpC,kBAACyJ,EAAA,EAAD,CACEC,IAAI,wFACJC,YAAY,yNAGhB,kBAACL,EAAA,EAAcC,UAAf,CAAyBC,SAAO,EAACxJ,KAAK,oBACpC,kBAACyJ,EAAA,EAAD,CACEC,IAAI,iEACJC,YAAY,sNACZC,WAAW,UAGf,kBAACN,EAAA,EAAcC,UAAf,CAAyBvJ,KAAK,qBAC5B,kBAACyJ,EAAA,EAAD,CACEC,IAAI,oDACJC,YAAY,0QAGhB,kBAACL,EAAA,EAAcC,UAAf,CAAyBvJ,KAAK,wBAC5B,kBAACyJ,EAAA,EAAD,CACEC,IAAI,qDACJC,YAAY,oJAGhB,kBAACL,EAAA,EAAcC,UAAf,CAAyBvJ,KAAK,gBAC5B,kBAACyJ,EAAA,EAAD,CACEC,IAAI,4EACJC,YAAY,6SACZC,WAAW,OACXC,IAAI,SAGR,kBAACP,EAAA,EAAcC,UAAf,CAAyBvJ,KAAK,wBAC5B,kBAACyJ,EAAA,EAAD,CACEC,IAAI,uEACJC,YAAY,oQAGhB,kBAACL,EAAA,EAAcC,UAAf,CAAyBvJ,KAAK,4BAC5B,kBAACyJ,EAAA,EAAD,CACEC,IAAI,4EACJC,YAAY,qQAIlB,kBAACG,EAAA,EAAD,CAAalK,SAAS,aACtB,kBAAC,GAAD,CAASN,QAASD,KAAKmH,MAAMlH,QAASa,aAAcd,KAAKmH,MAAME,cAAenG,UAAWlB,KAAKmH,MAAMjG,UAAYlB,KAAKmH,MAAMjG,UAAYlB,KAAKmH,MAAME,cAAepG,OAAQjB,KAAKmH,MAAM7B,eACpL,kBAAC,KAAD,CAAS/E,SAAS,WAChB,kBAACkF,GAAA,EAAD,CAAKC,KAAK,QAAQpD,QAAS,WACzBuG,UAAUC,YAAYC,oBAAmB,SAACxI,GACxC,EAAKyG,WAAW0D,QAAQ,CAACnK,EAASyI,OAAOC,SAAU1I,EAASyI,OAAOE,iBAGrE,kBAAC,KAAD,QAGJ,kBAAC,KAAD,CAAS3I,SAAS,WAChB,kBAAC8E,GAAD,CAAaC,aAActF,KAAKmH,MAAM7B,aAAcC,kBAAmBvF,KAAKuF,kBAAmBC,YAAaxF,KAAKwF,eAEnH,kBAAC,KAAD,CAASjF,SAAS,cAChB,kBAAC,GAAD,CAAKuB,eAAgB9B,KAAKmH,MAAMrF,eAAgB7B,QAASD,KAAKmH,MAAMlH,QAAS0E,QAAS3E,KAAKmH,MAAMxC,QAASQ,SAAUnF,KAAKmH,MAAMhC,SAAUpD,MAAO/B,KAAKmH,MAAM7B,sB,GArMrJnE,IAAMC,YCTxBuJ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4c094492.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport LocalPharmacyIcon from '@material-ui/icons/LocalPharmacy';\r\nimport LocalGroceryStoreIcon from '@material-ui/icons/LocalGroceryStore';\r\nimport LocalFloristIcon from '@material-ui/icons/LocalFlorist';\r\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport ChildCareIcon from '@material-ui/icons/ChildCare';\r\nimport ApartmentIcon from '@material-ui/icons/Apartment';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport PoolIcon from '@material-ui/icons/Pool';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport TurnedInIcon from '@material-ui/icons/TurnedIn';\r\nimport TurnedInNotIcon from '@material-ui/icons/TurnedInNot';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport indigo from '@material-ui/core/colors/green';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport red from '@material-ui/core/colors/red';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport brown from '@material-ui/core/colors/brown';\r\nimport cyan from '@material-ui/core/colors/cyan';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\n\r\nconst mapping = {\r\n    \"bakery\": {\r\n        icon: <CakeIcon style={{\r\n            color: amber[500],\r\n            margin: \"2px\"\r\n        }} />,\r\n        color: amber[500],\r\n        tags: function (tags) {\r\n            return (tags.hasOwnProperty(\"shop\") && tags.shop === \"bakery\")\r\n        },\r\n        query: '[\"shop\"=\"bakery\"]'\r\n    },\r\n    \"college\": {\r\n        icon: <ApartmentIcon style={{\r\n            color: grey[900],\r\n            margin: \"2px\"\r\n        }} />,\r\n        color: grey[900],\r\n        tags: function (tags) {\r\n            return (tags.hasOwnProperty(\"amenity\") && tags.amenity === \"college\")\r\n        },\r\n        query: '[\"amenity\"=\"college\"]'\r\n    },\r\n    \"kindergarten\": {\r\n        icon: <ChildCareIcon style={{\r\n            color: pink[500],\r\n            margin: \"2px\"\r\n        }} />,\r\n        color: pink[500],\r\n        tags: function (tags) {\r\n            return (tags.hasOwnProperty(\"amenity\") && tags.amenity === \"kindergarten\")\r\n        },\r\n        query: '[\"amenity\"=\"kindergarten\"]'\r\n    },\r\n    \"school\": {\r\n        icon: <SchoolIcon style={{\r\n            color: cyan[500],\r\n            margin: \"2px\"\r\n        }} />,\r\n        color: cyan[500],\r\n        tags: function (tags) {\r\n            return (tags.hasOwnProperty(\"amenity\") && tags.amenity === \"school\")\r\n        },\r\n        query: '[\"amenity\"=\"school\"]'\r\n    },\r\n    \"supermarket\": {\r\n        icon: <LocalGroceryStoreIcon style={{\r\n            color: brown[500],\r\n            margin: \"2px\"\r\n        }} />,\r\n        color: brown[500],\r\n        tags: function (tags) {\r\n            return (tags.hasOwnProperty(\"shop\") && tags.shop === \"supermarket\")\r\n        },\r\n        query: '[\"shop\"=\"supermarket\"]'\r\n    },\r\n    \"swimming\": {\r\n        icon: <PoolIcon style={{\r\n            color: indigo[500],\r\n            margin: \"2px\"\r\n        }} />,\r\n        color: indigo[500],\r\n        tags: function (tags) {\r\n            return (tags.hasOwnProperty(\"sport\") && tags.sport === \"swimming\")\r\n        },\r\n        query: '[\"sport\"=\"swimming\"]'\r\n    },\r\n    \"cinema\": {\r\n        icon: <LocalMoviesIcon style={{\r\n            color: purple[500],\r\n            margin: \"2px\"\r\n        }} />,\r\n        color: purple[500],\r\n        tags: function (tags) {\r\n            return (tags.hasOwnProperty(\"amenity\") && tags.amenity === \"cinema\")\r\n        },\r\n        query: '[\"amenity\"=\"cinema\"]'\r\n    },\r\n    \"playground\": {\r\n        icon: <CategoryIcon style={{\r\n            color: teal[500],\r\n            margin: \"2px\"\r\n        }} />,\r\n        color: teal[500],\r\n        tags: function (tags) {\r\n            return (tags.hasOwnProperty(\"leisure\") && tags.leisure === \"playground\")\r\n        },\r\n        query: '[\"leisure\"=\"playground\"] [\"access\"!=\"private\"]'\r\n    },\r\n    \"park\": {\r\n        icon: <LocalFloristIcon style={{\r\n            color: green[500],\r\n            margin: \"2px\"\r\n        }} />,\r\n        color: green[500],\r\n        tags: function (tags) {\r\n            return (tags.hasOwnProperty(\"leisure\") && tags.leisure === \"park\")\r\n        },\r\n        query: '[\"leisure\"=\"park\"]'\r\n    },\r\n    \"pharmacy\": {\r\n        icon: <LocalPharmacyIcon style={{\r\n            color: red[500],\r\n            margin: \"2px\"\r\n        }} />,\r\n        color: red[500],\r\n        tags: function (tags) {\r\n            return (tags.hasOwnProperty(\"amenity\") && tags.amenity === \"pharmacy\")\r\n        },\r\n        query: '[\"amenity\"=\"pharmacy\"]'\r\n    },\r\n    \"chemist\": {\r\n        icon: <AddShoppingCartIcon style={{\r\n            color: red[100],\r\n            margin: \"2px\"\r\n        }} />,\r\n        color: red[100],\r\n        tags: function (tags) {\r\n            return (tags.hasOwnProperty(\"shop\") && tags.shop === \"chemist\")\r\n        },\r\n        query: '[\"shop\"=\"chemist\"]'\r\n    }\r\n}\r\n\r\nconst overpassQuery = function (types) {\r\n    var query = \"[timeout:25] [out:json] ; (\";\r\n    types.forEach(type => {\r\n        query += \"\\n  nwr \" + mapping[type].query + \" (around:<RANGE>,<LAT>,<LON>);\";\r\n    });\r\n    query += \");  out center;  >; out skel qt;\";\r\n    return query;\r\n}\r\n\r\nconst getAllTypes = function () {\r\n    return Object.keys(mapping);\r\n}\r\n\r\nconst typeIconMapper = function (type) {\r\n    if (type === \"position\") {\r\n        return <AddIcon style={{\r\n            color: typeColorMapper(type)\r\n        }} />;\r\n    } if (type === \"center\") {\r\n        return <CodeIcon style={{\r\n            color: typeColorMapper(type)\r\n        }} />;\r\n    } if (type === \"unknown\") {\r\n        return <TurnedInIcon style={{\r\n            color: typeColorMapper(type),\r\n            margin: \"2px\"\r\n        }} />\r\n    }\r\n    if (mapping.hasOwnProperty(type))\r\n        return mapping[type].icon;\r\n    else\r\n        return <TurnedInNotIcon style={{\r\n            color: typeColorMapper(type),\r\n            margin: \"2px\"\r\n        }} />;\r\n}\r\n\r\nconst typeColorMapper = function (type) {\r\n    if (type === \"position\") {\r\n        return blue[500];\r\n    } if (type === \"center\") {\r\n        return blue[500];\r\n    }\r\n    if (mapping.hasOwnProperty(type))\r\n        return mapping[type].color;\r\n    else\r\n        return grey[900];\r\n}\r\n\r\nconst tagTypeMapper = function (tags) {\r\n    var foundType = \"unknown\";\r\n    Object.keys(mapping).forEach(function (type) {\r\n        if (mapping[type].tags(tags)) {\r\n            foundType = type;\r\n            return;\r\n        }\r\n    });\r\n    return foundType;\r\n}\r\n\r\nexport {\r\n    typeIconMapper, typeColorMapper, tagTypeMapper, overpassQuery, getAllTypes\r\n};","import React from \"react\";\r\nimport { Marker, Popup, Circle } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { typeIconMapper } from './Mapping.js'\r\n\r\nclass Markers extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getIconForType = this.getIconForType.bind(this);\r\n    }\r\n\r\n    getIconForType(type) {\r\n        return L.divIcon({//TODO: set iconAnchor\r\n            className: 'custom-icon',\r\n            html: ReactDOMServer.renderToString(typeIconMapper(type))\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.osmData\r\n                    .map((entry, idx) => (\r\n                        <Marker key={`marker-${idx}`} position={[entry.lat, entry.lon]} icon={this.getIconForType(entry.type)}>\r\n                            <Popup>\r\n                                <span>{entry.type}</span>:\r\n                                <span>{entry.name}</span>\r\n                            </Popup>\r\n                        </Marker>\r\n                    ))}\r\n                <Circle\r\n                    center={{ lat: this.props.searchCenter[0], lng: this.props.searchCenter[1] }}\r\n                    fillColor=\"blue\"\r\n                    radius={this.props.radius} />\r\n                <Marker key={`marker-searchCenter`} position={[this.props.searchCenter[0], this.props.searchCenter[1]]} icon={this.getIconForType(\"position\")} />\r\n                <Marker key={`marker-mapCenter`} position={[this.props.mapCenter[0], this.props.mapCenter[1]]} icon={this.getIconForType(\"center\")} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Markers;","import React from 'react';\r\nimport {\r\n  IconButton, Dialog, ListItem,\r\n  List, ListItemIcon, AppBar, Toolbar, Typography, ListItemText\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { typeIconMapper, typeColorMapper } from './Mapping'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport MapIcon from '@material-ui/icons/Map';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nexport default function ResultListDialog({\r\n  osmDataCounted,\r\n  osmData,\r\n  range\r\n}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper onClick={handleClickOpen} style={{ padding: \"10px\" }}>\r\n        {Object.keys(osmDataCounted)\r\n          .map((key) => (\r\n            <Tooltip key={`tooltip-${key}`} title={key} aria-label={key}>\r\n              <Badge badgeContent={osmDataCounted[key]} style={{ color: typeColorMapper(key) }}>\r\n                {typeIconMapper(key)}\r\n              </Badge>\r\n            </Tooltip>\r\n          ))}\r\n      </Paper  >\r\n      <Dialog fullScreen open={open} onClose={handleClose} >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              POIs within {range}m range\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List dense={true}>\r\n          {osmData\r\n            .map((entry, idx) => (\r\n              <ListItem alignItems=\"flex-start\" key={`listitem-${idx}`} >\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    {typeIconMapper(entry.type)}\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={entry.name} secondary={entry.address.street + \" \" + entry.address.housenumber + \", \" + entry.address.postcode + \" \" + entry.address.city} />\r\n                <ListItemIcon>\r\n                  <IconButton color=\"primary\" disabled={!entry.phone} onClick={() => window.open(\"tel:\" + entry.phone, \"_blank\")}>\r\n                    <PhoneIcon />\r\n                  </IconButton>\r\n                </ListItemIcon>\r\n                <ListItemIcon>\r\n                  <IconButton color=\"primary\" disabled={!entry.website} onClick={() => window.open(entry.website, \"_blank\")}>\r\n                    <LanguageIcon />\r\n                  </IconButton>\r\n                </ListItemIcon>\r\n                <ListItemIcon>\r\n                  <IconButton color=\"primary\" onClick={() => window.open(\"https://www.google.com/maps/dir/?api=1&destination=\" + entry.lat + \"%2C\" + entry.lon, \"_blank\")}>\r\n                    <MapIcon />\r\n                  </IconButton>\r\n                </ListItemIcon>\r\n              </ListItem>\r\n            ))}\r\n        </List>\r\n      </Dialog>\r\n    </div >\r\n  );\r\n}","import React from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport ResultListDialog from \"./ResultListDialog\"\r\n\r\nclass Bar extends React.Component {\r\n\r\n    render() {\r\n        if (this.props.loading) {\r\n            return (\r\n                <Paper style={{ padding: \"5px\" }}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={2}>\r\n                            <CachedIcon />\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <Typography align=\"center\">\r\n                                loading OSM data\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper  >\r\n            );\r\n        } else {\r\n            if ((Object.getOwnPropertyNames(this.props.osmDataCounted).length > 0))\r\n                return (\r\n                    <ResultListDialog osmDataCounted={this.props.osmDataCounted} osmData={this.props.osmData} range={this.props.range} />\r\n                );\r\n            else if (this.props.osmError) {\r\n                return (\r\n                    <Paper style={{ padding: \"5px\" }}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={2}>\r\n                                <ErrorIcon color=\"error\" />\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <Typography align=\"center\" color=\"error\">\r\n                                    {this.props.osmError.message}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper  >\r\n                );\r\n            } else {\r\n                return <React.Fragment />\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\nexport default Bar;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function RangeDialog({\r\n    defaultRange,\r\n    handleRangeChange,\r\n    loadOSMData\r\n}) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleLoad = () => {\r\n        setOpen(false);\r\n        loadOSMData();\r\n    };\r\n\r\n    const marks = [\r\n        {\r\n            value: 500,\r\n            label: '0.5 km',\r\n        },\r\n        {\r\n            value: 1500,\r\n            label: '1.5 km',\r\n        },\r\n        {\r\n            value: 3000,\r\n            label: '3 km',\r\n        }\r\n    ];\r\n\r\n    function valuetext(value) {\r\n        return `${value}km`;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Fab size=\"small\" onClick={handleClickOpen}><AutorenewIcon /></Fab >\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"set range to search for POIs\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item>\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                            <Typography id=\"discrete-slider-always\" gutterBottom>\r\n                            </Typography>\r\n                            <Slider value={defaultRange} onChange={handleRangeChange}\r\n                                aria-labelledby=\"discrete-slider-always\" step={500} defaultValue={1500} min={500} max={3000}\r\n                                marks={marks} getAriaValueText={valuetext} valueLabelDisplay=\"off\" />\r\n                        </Grid>\r\n                        <Grid item>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleLoad} color=\"primary\" autoFocus>\r\n                        Load\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Map, TileLayer, LayersControl, ZoomControl } from \"react-leaflet\";\r\nimport \"./App.css\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport Markers from \"./Markers\"\r\nimport Bar from \"./Bar\"\r\nimport Control from 'react-leaflet-control';\r\nimport GpsNotFixedIcon from '@material-ui/icons/GpsNotFixed';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport RangeDialog from \"./RangeDialog\"\r\nimport { OpenStreetMapProvider, SearchControl } from 'leaflet-geosearch';\r\nimport 'leaflet-geosearch/dist/geosearch.css';\r\nimport { tagTypeMapper, overpassQuery, getAllTypes } from './Mapping.js'\r\n\r\nclass App extends React.Component {\r\n  leafletMap = null;\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      defaultZoom: 13,\r\n      defaultCenter: [0, 9],\r\n      osmRequest: null,\r\n      defaultRange: 1500,\r\n      osmData: [],\r\n      osmDataCounted: {},\r\n      loading: false\r\n    };\r\n    this.loadOSMData = this.loadOSMData.bind(this);\r\n    this.handleRangeChange = this.handleRangeChange.bind(this);\r\n    this.handleMove = this.handleMove.bind(this);\r\n    this.handleOSMResponse = this.handleOSMResponse.bind(this);\r\n  }\r\n\r\n  setLeafletMapRef = (map) => (this.leafletMap = map && map.leafletElement);\r\n\r\n  loadOSMData() {\r\n    //clear old map   \r\n    this.setState({\r\n      loading: true,\r\n      osmError: null\r\n    });\r\n    // get new data\r\n    const queryOverpass = require(\"@derhuerst/query-overpass\");\r\n    var requestBody = this.state.osmRequest;\r\n    requestBody = requestBody\r\n      .replaceAll(\"<RANGE>\", this.state.defaultRange)\r\n      .replaceAll(\"<LAT>\", this.leafletMap.getCenter().lat)\r\n      .replaceAll(\"<LON>\", this.leafletMap.getCenter().lng);\r\n    console.log(\r\n      \"requesting OSM data for position\",\r\n      this.leafletMap.getCenter(),\r\n      requestBody\r\n    );\r\n    queryOverpass(requestBody)\r\n      .then((response) => {\r\n        this.handleOSMResponse(response);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          loading: false,\r\n          osmError: error\r\n        });\r\n      });\r\n  }\r\n\r\n  handleOSMResponse(response) {\r\n    // enhance the osm Response\r\n    const parsedEntries = [];\r\n    const entryMapCount = {};\r\n    response\r\n      .filter((entry) => (entry.type === \"node\" || entry.type === \"way\") && entry.lat && entry.tags)\r\n      .map((entry, idx) => {\r\n        const tag = tagTypeMapper(entry.tags);\r\n        parsedEntries.push({\r\n          name: entry.tags.name,\r\n          lat: (entry.type === \"node\") ? entry.lat : entry.center.lat,\r\n          lon: (entry.type === \"node\") ? entry.lon : entry.center.lon,\r\n          type: tag,\r\n          address: {\r\n            city: entry.tags[\"addr:city\"],\r\n            housenumber: entry.tags[\"addr:housenumber\"],\r\n            postcode: entry.tags[\"addr:postcode\"],\r\n            street: entry.tags[\"addr:street\"]\r\n          },\r\n          openingHours: entry.tags[\"opening_hours\"],\r\n          website: entry.tags.website,\r\n          phone: entry.tags.phone\r\n        })\r\n        if (entryMapCount.hasOwnProperty(tag)) {\r\n          entryMapCount[tag] = entryMapCount[tag] + 1;\r\n        } else {\r\n          entryMapCount[tag] = 1;\r\n        }\r\n      });\r\n    this.setState({\r\n      osmData: parsedEntries,\r\n      osmDataCounted: entryMapCount,\r\n      loading: false,\r\n      osmError: null,\r\n      defaultCenter: [this.leafletMap.getCenter().lat, this.leafletMap.getCenter().lng]\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.setState({\r\n        defaultCenter: [position.coords.latitude, position.coords.longitude]\r\n      });\r\n    });\r\n    /*fetch(process.env.PUBLIC_URL + \"/data/overpassQL.txt\", { mode: 'no-cors' }).then((res) =>\r\n      res.text().then((text) => {\r\n        console.log(\"request for osm\", text);\r\n        this.setState({ osmRequest: text });\r\n      })\r\n    );*/\r\n    this.setState({\r\n      osmRequest: overpassQuery(getAllTypes())\r\n    });\r\n    const searchControl = new SearchControl({\r\n      provider: new OpenStreetMapProvider(),\r\n      style: 'bar',\r\n      showMarker: false\r\n    });\r\n    this.leafletMap.addControl(searchControl);\r\n  }\r\n\r\n  handleRangeChange(event, value) {\r\n    this.setState({\r\n      defaultRange: value\r\n    });\r\n  }\r\n\r\n  handleMove(e) {\r\n    this.setState({\r\n      mapCenter: [e.target.getCenter().lat, e.target.getCenter().lng]\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Map\r\n          ref={this.setLeafletMapRef}\r\n          center={this.state.defaultCenter}\r\n          zoom={this.state.defaultZoom}\r\n          zoomControl={false}\r\n          onMove={this.handleMove}\r\n        >\r\n          <LayersControl position=\"topright\">\r\n            <LayersControl.BaseLayer checked name=\"CartoDB.VoyagerLabelsUnder\">\r\n              <TileLayer\r\n                url='https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}{r}.png'\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a> | Data mining by [<a href=\"http://overpass-api.de/\">Overpass API</a>]'\r\n              />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer checked name=\"CartoDB.Positron\">\r\n              <TileLayer\r\n                url='https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png'\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a> | Data mining by [<a href=\"http://overpass-api.de/\">Overpass API</a>]'\r\n                subdomains='abcd'\r\n              />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"OpenStreetMap.BZH\">\r\n              <TileLayer\r\n                url=\"https://tile.openstreetmap.bzh/br/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Tiles courtesy of <a href=\"http://www.openstreetmap.bzh/\" target=\"_blank\">Breton OpenStreetMap Team</a> | Data mining by [<a href=\"http://overpass-api.de/\">Overpass API</a>]'\r\n              />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"OpenStreetMap.Mapnik\">\r\n              <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> | Data mining by [<a href=\"http://overpass-api.de/\">Overpass API</a>]'\r\n              />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"Stamen.Toner\">\r\n              <TileLayer\r\n                url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.{ext}\"\r\n                attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors | Data mining by [<a href=\"http://overpass-api.de/\">Overpass API</a>]'\r\n                subdomains='abcd'\r\n                ext='png'\r\n              />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"Stadia.AlidadeSmooth\">\r\n              <TileLayer\r\n                url='https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png'\r\n                attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors | Data mining by [<a href=\"http://overpass-api.de/\">Overpass API</a>]'\r\n              />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"Stadia.AlidadeSmoothDark\">\r\n              <TileLayer\r\n                url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"\r\n                attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors | Data mining by [<a href=\"http://overpass-api.de/\">Overpass API</a>]'\r\n              />\r\n            </LayersControl.BaseLayer>\r\n          </LayersControl>\r\n          <ZoomControl position=\"topright\" />\r\n          <Markers osmData={this.state.osmData} searchCenter={this.state.defaultCenter} mapCenter={this.state.mapCenter ? this.state.mapCenter : this.state.defaultCenter} radius={this.state.defaultRange} />\r\n          <Control position=\"topleft\" >\r\n            <Fab size=\"small\" onClick={() => {\r\n              navigator.geolocation.getCurrentPosition((position) => {\r\n                this.leafletMap.setView([position.coords.latitude, position.coords.longitude]);\r\n              });\r\n            }}>\r\n              <GpsNotFixedIcon />\r\n            </Fab>\r\n          </Control>\r\n          <Control position=\"topleft\" >\r\n            <RangeDialog defaultRange={this.state.defaultRange} handleRangeChange={this.handleRangeChange} loadOSMData={this.loadOSMData} />\r\n          </Control>\r\n          <Control position=\"bottomleft\" >\r\n            <Bar osmDataCounted={this.state.osmDataCounted} osmData={this.state.osmData} loading={this.state.loading} osmError={this.state.osmError} range={this.state.defaultRange} />\r\n          </Control>\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}